{"ast":null,"code":"var _jsxFileName = \"/Users/harun/Documents/Capstone_Project/capstone-frontend/src/components/DeliveryJob.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport \"../styles/delivery-jobs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryJob = ({\n  job,\n  updateBtn,\n  btnMessage\n}) => {\n  _s();\n  const [duration, setDuration] = useState(null);\n  useEffect(() => {\n    // Replace 'WAREHOUSE_COORDINATES' and 'DELIVERY_COORDINATES' with actual coordinates\n    const warehouseCoordinates = 'WAREHOUSE_COORDINATES';\n    const deliveryCoordinates = `${job.latitude},${job.longitude}`;\n\n    // Call Google Maps Distance Matrix API to get distance and duration\n    const apiUrl = `https://maps.googleapis.com/maps/api/distancematrix/json?origins=${warehouseCoordinates}&destinations=${deliveryCoordinates}&key=YOUR_API_KEY`;\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      const durationInSeconds = data.rows[0].elements[0].duration.value;\n      // Convert duration from seconds to hours and minutes\n      const hours = Math.floor(durationInSeconds / 3600);\n      const minutes = Math.floor(durationInSeconds % 3600 / 60);\n      setDuration(`${hours} hours ${minutes} minutes`);\n    }).catch(error => console.error('Error fetching distance matrix:', error));\n  }, [job]);\n\n  // Rest of your component code\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"job-listing\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recipient: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), \" \", job.customerName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", job.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Postcode: \", job.postcode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Estimated Duration: \", duration]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DeliveryJob, \"guFl/8yV+fJv5FYZgsKNxgXkwZw=\");\n_c = DeliveryJob;\nexport default DeliveryJob;\nvar _c;\n$RefreshReg$(_c, \"DeliveryJob\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","DeliveryJob","job","updateBtn","btnMessage","_s","duration","setDuration","warehouseCoordinates","deliveryCoordinates","latitude","longitude","apiUrl","fetch","then","response","json","data","durationInSeconds","rows","elements","value","hours","Math","floor","minutes","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","customerName","address","postcode","_c","$RefreshReg$"],"sources":["/Users/harun/Documents/Capstone_Project/capstone-frontend/src/components/DeliveryJob.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport \"../styles/delivery-jobs.css\";\n\nconst DeliveryJob = ({ job, updateBtn, btnMessage }) => {\n  const [duration, setDuration] = useState(null);\n\n  useEffect(() => {\n    // Replace 'WAREHOUSE_COORDINATES' and 'DELIVERY_COORDINATES' with actual coordinates\n    const warehouseCoordinates = 'WAREHOUSE_COORDINATES';\n    const deliveryCoordinates = `${job.latitude},${job.longitude}`;\n\n    // Call Google Maps Distance Matrix API to get distance and duration\n    const apiUrl = `https://maps.googleapis.com/maps/api/distancematrix/json?origins=${warehouseCoordinates}&destinations=${deliveryCoordinates}&key=YOUR_API_KEY`;\n    \n    fetch(apiUrl)\n      .then(response => response.json())\n      .then(data => {\n        const durationInSeconds = data.rows[0].elements[0].duration.value;\n        // Convert duration from seconds to hours and minutes\n        const hours = Math.floor(durationInSeconds / 3600);\n        const minutes = Math.floor((durationInSeconds % 3600) / 60);\n        setDuration(`${hours} hours ${minutes} minutes`);\n      })\n      .catch(error => console.error('Error fetching distance matrix:', error));\n  }, [job]);\n\n  // Rest of your component code\n\n  return (\n    <section className=\"job-listing\">\n      <div className=\"job-details\">\n        <p>\n          <span>Recipient: </span> {job.customerName}\n        </p>\n        <p>Address: {job.address}</p>\n        <p>Postcode: {job.postcode}</p>\n        <p>Estimated Duration: {duration}</p>\n        {/* Other details */}\n      </div>\n      {/* Map and other components */}\n    </section>\n  );\n};\n\nexport default DeliveryJob;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,oBAAoB,GAAG,uBAAuB;IACpD,MAAMC,mBAAmB,GAAI,GAAEP,GAAG,CAACQ,QAAS,IAAGR,GAAG,CAACS,SAAU,EAAC;;IAE9D;IACA,MAAMC,MAAM,GAAI,oEAAmEJ,oBAAqB,iBAAgBC,mBAAoB,mBAAkB;IAE9JI,KAAK,CAACD,MAAM,CAAC,CACVE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACd,QAAQ,CAACe,KAAK;MACjE;MACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACN,iBAAiB,GAAG,IAAI,CAAC;MAClD,MAAMO,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEN,iBAAiB,GAAG,IAAI,GAAI,EAAE,CAAC;MAC3DX,WAAW,CAAE,GAAEe,KAAM,UAASG,OAAQ,UAAS,CAAC;IAClD,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;EAC5E,CAAC,EAAE,CAACzB,GAAG,CAAC,CAAC;;EAET;;EAEA,oBACEF,OAAA;IAAS6B,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC9B9B,OAAA;MAAK6B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B9B,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,EAAM;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,EAAChC,GAAG,CAACiC,YAAY;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACJlC,OAAA;QAAA8B,QAAA,GAAG,WAAS,EAAC5B,GAAG,CAACkC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BlC,OAAA;QAAA8B,QAAA,GAAG,YAAU,EAAC5B,GAAG,CAACmC,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BlC,OAAA;QAAA8B,QAAA,GAAG,sBAAoB,EAACxB,QAAQ;MAAA;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAvCIJ,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}